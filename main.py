import argparse
import sys
from pathlib import Path
from exporters.excel_exporter import generate_matrices_from_yaml
from exporters.html_report import generate_html_report


def main_menu():
    """
    –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–∏
    """
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    parser = argparse.ArgumentParser(description="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–∞—Ç—Ä–∏—Ü—å –∫–æ–º–ø–µ—Ç–µ–Ω—Ü—ñ–π")
    parser.add_argument(
        "yaml_file",
        nargs="?",
        default="curriculum.yaml",
        help="–®–ª—è—Ö –¥–æ YAML —Ñ–∞–π–ª—É (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: curriculum.yaml)",
    )
    parser.add_argument("--excel", "-e", help="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ Excel —Ç–∞ –≤–∏–π—Ç–∏")
    parser.add_argument(
        "--html", "-t", help="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ HTML —Ç–∞ –≤–∏–π—Ç–∏", action="store_true"
    )
    parser.add_argument(
        "--stats", "-s", action="store_true", help="–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞ –≤–∏–π—Ç–∏"
    )

    args = parser.parse_args()
    # yaml_file = args.yaml_file
    yaml_file = Path("data") / args.yaml_file
    # –®–≤–∏–¥–∫—ñ –∫–æ–º–∞–Ω–¥–∏ –±–µ–∑ –º–µ–Ω—é
    if args.excel:
        if not Path(yaml_file).exists():
            print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            return
        generate_matrices_from_yaml(yaml_file, args.excel)
        return

    if args.html:
        if not Path(yaml_file).exists():
            print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            return
        generate_html_report(yaml_file)
        return

    if args.stats:
        if not Path(yaml_file).exists():
            print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
            return
        show_statistics(yaml_file)
        return

    # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é
    while True:
        print("\n" + "=" * 60)
        print("üöÄ –ì–ï–ù–ï–†–ê–¢–û–† –ú–ê–¢–†–ò–¶–¨ –ö–û–ú–ü–ï–¢–ï–ù–¶–Ü–ô")
        print("=" * 60)
        print(f"üìÅ –†–æ–±–æ—á–∏–π —Ñ–∞–π–ª: {yaml_file}")
        if not Path(yaml_file).exists():
            print("‚ö†Ô∏è  –§–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î - —Å—Ç–≤–æ—Ä—ñ—Ç—å —à–∞–±–ª–æ–Ω (–æ–ø—Ü—ñ—è 6)")
        print("=" * 60)
        print("1. üìù –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç–µ–π")
        print("2. üìä –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Excel –º–∞—Ç—Ä–∏—Ü—å")
        print("3. üåê HTML –∑–≤—ñ—Ç (–≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ)")
        print("4. üìà –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        print("5. üîç –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö")
        print("6. üìÑ –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π YAML —à–∞–±–ª–æ–Ω")
        print("7. üìÇ –ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–±–æ—á–∏–π —Ñ–∞–π–ª")
        print("0. ‚ùå –í–∏—Ö—ñ–¥")
        print("=" * 60)

        choice = input("–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é (0-7): ").strip()

        try:
            if choice == "1":
                if not Path(yaml_file).exists():
                    print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                    print("üìù –°—Ç–≤–æ—Ä—ñ—Ç—å —Å–ø–æ—á–∞—Ç–∫—É —à–∞–±–ª–æ–Ω (–æ–ø—Ü—ñ—è 6)")
                else:
                    interactive_fill_mappings(yaml_file)

            elif choice == "2":
                if not Path(yaml_file).exists():
                    print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                else:
                    excel_file = input(
                        f"–ù–∞–∑–≤–∞ Excel —Ñ–∞–π–ª—É (Enter –¥–ª—è {Path(yaml_file).stem}.xlsx): "
                    ).strip()
                    if not excel_file:
                        excel_file = f"{Path(yaml_file).stem}.xlsx"
                    generate_matrices_from_yaml(yaml_file, excel_file)

            elif choice == "3":
                if not Path(yaml_file).exists():
                    print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                else:
                    generate_html_report(yaml_file)

            elif choice == "4":
                if not Path(yaml_file).exists():
                    print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                else:
                    show_statistics(yaml_file)

            elif choice == "5":
                if not Path(yaml_file).exists():
                    print(f"‚ùå –§–∞–π–ª {yaml_file} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")
                else:
                    validate_data(yaml_file)

            elif choice == "6":
                if Path(yaml_file).exists():
                    overwrite = input(
                        f"‚ö†Ô∏è  –§–∞–π–ª {yaml_file} –≤–∂–µ —ñ—Å–Ω—É—î. –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç–∏? (y/N): "
                    )
                    if overwrite.lower() != "y":
                        print("‚ùå –°–∫–∞—Å–æ–≤–∞–Ω–æ")
                        continue
                create_yaml_template(yaml_file)

            elif choice == "7":
                new_file = input("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ YAML —Ñ–∞–π–ª—É: ").strip()
                if new_file:
                    yaml_file = new_file
                    print(f"‚úÖ –†–æ–±–æ—á–∏–π —Ñ–∞–π–ª –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞: {yaml_file}")

            elif choice == "0":
                print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
                break

            else:
                print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥ 0 –¥–æ 7")

        except KeyboardInterrupt:
            print("\nüëã –ü—Ä–æ–≥—Ä–∞–º—É –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

        input("\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è...")


if __name__ == "__main__":
    # –î–æ–¥–∞—î–º–æ –ø—Ä–∏–∫–ª–∞–¥–∏ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è
    if len(sys.argv) > 1 and sys.argv[1] in ["--help", "-h", "help"]:
        print("""
üöÄ –ì–ï–ù–ï–†–ê–¢–û–† –ú–ê–¢–†–ò–¶–¨ –ö–û–ú–ü–ï–¢–ï–ù–¶–Ü–ô

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
  python matrix2.py                          # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é (curriculum.yaml)
  python matrix2.py bachelor.yaml           # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é (bachelor.yaml)
  python matrix2.py bachelor.yaml --excel bachelor.xlsx   # –¢—ñ–ª—å–∫–∏ Excel
  python matrix2.py bachelor.yaml --html                  # –¢—ñ–ª—å–∫–∏ HTML
  python matrix2.py bachelor.yaml --stats                 # –¢—ñ–ª—å–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞

–ü—Ä–∏–∫–ª–∞–¥–∏:
  python matrix2.py bachelor.yaml -e bachelor_matrices.xlsx
  python matrix2.py master.yaml -h  
  python matrix2.py curriculum.yaml -s
        """)
        sys.exit(0)

    main_menu()
