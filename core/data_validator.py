import yaml


def validate_data(yaml_file="curriculum.yaml"):
    """
    –ü–µ—Ä–µ–≤—ñ—Ä—è—î –∫–æ—Ä–µ–∫—Ç–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö —É YAML —Ñ–∞–π–ª—ñ
    """
    try:
        with open(yaml_file, "r", encoding="utf-8") as f:
            config = yaml.safe_load(f)
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è YAML: {e}")
        return False

    print("üîç –í–ê–õ–Ü–î–ê–¶–Ü–Ø –î–ê–ù–ò–•")
    print("=" * 30)

    errors = []
    warnings = []

    disciplines = config.get("disciplines", {})
    competencies = config.get("competencies", {})
    program_results = config.get("program_results", {})
    mappings = config.get("mappings", {})

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    if not disciplines:
        errors.append("–í—ñ–¥—Å—É—Ç–Ω—è —Å–µ–∫—Ü—ñ—è 'disciplines'")
    if not competencies:
        errors.append("–í—ñ–¥—Å—É—Ç–Ω—è —Å–µ–∫—Ü—ñ—è 'competencies'")
    if not program_results:
        errors.append("–í—ñ–¥—Å—É—Ç–Ω—è —Å–µ–∫—Ü—ñ—è 'program_results'")

    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç—ñ
    for disc_code, mapping in mappings.items():
        if disc_code not in disciplines:
            errors.append(f"–ù–µ–≤—ñ–¥–æ–º–∞ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∞ –≤ mappings: {disc_code}")

        for comp in mapping.get("competencies", []):
            if comp not in competencies:
                errors.append(f"–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü—ñ—è: {comp} (—É {disc_code})")

        for prog in mapping.get("program_results", []):
            if prog not in program_results:
                errors.append(f"–ù–µ–≤—ñ–¥–æ–º–∏–π –ø—Ä–æ–≥—Ä–∞–º–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {prog} (—É {disc_code})")

    # –ü–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è –ø—Ä–æ –Ω–µ–∑–∞–ø–æ–≤–Ω–µ–Ω—ñ –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω–∏
    unfilled_count = len(disciplines) - len(mappings)
    if unfilled_count > 0:
        warnings.append(f"–ù–µ–∑–∞–ø–æ–≤–Ω–µ–Ω–æ {unfilled_count} –¥–∏—Å—Ü–∏–ø–ª—ñ–Ω")

    # –í–∏–≤–æ–¥–∏–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏
    if errors:
        print("‚ùå –ü–û–ú–ò–õ–ö–ò:")
        for error in errors:
            print(f"  ‚Ä¢ {error}")

    if warnings:
        print("\n‚ö†Ô∏è  –ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø:")
        for warning in warnings:
            print(f"  ‚Ä¢ {warning}")

    if not errors and not warnings:
        print("‚úÖ –í—Å—ñ –¥–∞–Ω—ñ –∫–æ—Ä–µ–∫—Ç–Ω—ñ!")
    elif not errors:
        print("‚úÖ –ö—Ä–∏—Ç–∏—á–Ω–∏—Ö –ø–æ–º–∏–ª–æ–∫ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

    return len(errors) == 0