import argparse
import sys
from pathlib import Path
from handlers.handlers import handle_csv_conversion
from handlers.handlers import handle_interactive_filling
from handlers.handlers import handle_excel_generation
from handlers.handlers import handle_html_report
from handlers.handlers import handle_data_validation
from handlers.handlers import handle_template_creation
from handlers.handlers import handle_file_change
from handlers.handlers import handle_csv_submenu
from handlers.handlers import handle_quick_commands
from handlers.handlers import handle_statistics_display
from utils.file_utils import  check_file_exists





def parse_command_line_args():
    """–ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞"""
    parser = argparse.ArgumentParser(description="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–∞—Ç—Ä–∏—Ü—å –∫–æ–º–ø–µ—Ç–µ–Ω—Ü—ñ–π")
    parser.add_argument(
        "yaml_file",
        nargs="?",
        default="curriculum.yaml",
        help="–®–ª—è—Ö –¥–æ YAML —Ñ–∞–π–ª—É (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º: curriculum.yaml)",
    )
    parser.add_argument(
        "--excel", "-x",
        action="store_true",
        help="–ï–∫—Å–ø–æ—Ä—Ç—É–≤–∞—Ç–∏ —É Excel (—Ñ–∞–π–ª —Å—Ç–≤–æ—Ä–∏—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ)"
    )
    parser.add_argument(
        "--html", "-t", 
        action="store_true",
        help="–ó–≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ HTML —Ç–∞ –≤–∏–π—Ç–∏"
    )
    parser.add_argument(
        "--stats", "-s", 
        action="store_true", 
        help="–ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–∞ –≤–∏–π—Ç–∏"
    )
    parser.add_argument(
        "--csv", "-c", 
        help="–ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ CSV –≤ YAML", 
        metavar="CSV_FILE"
    )
    
    return parser.parse_args()


def print_main_menu(yaml_file):
    """–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    print("\n" + "=" * 60)
    print("üöÄ –ì–ï–ù–ï–†–ê–¢–û–† –ú–ê–¢–†–ò–¶–¨ –ö–û–ú–ü–ï–¢–ï–ù–¶–Ü–ô")
    print("=" * 60)
    print(f"üìÅ –†–æ–±–æ—á–∏–π —Ñ–∞–π–ª: {yaml_file}")
    
    if not check_file_exists(yaml_file):
        print("‚ö†Ô∏è  –§–∞–π–ª –Ω–µ —ñ—Å–Ω—É—î - —Å—Ç–≤–æ—Ä—ñ—Ç—å —à–∞–±–ª–æ–Ω (–æ–ø—Ü—ñ—è 6)")
    
    print("=" * 60)
    print("1. üìù –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—Å—Ç–µ–π")
    print("2. üìä –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Excel –º–∞—Ç—Ä–∏—Ü—å")
    print("3. üåê HTML –∑–≤—ñ—Ç (–≤—ñ–¥–∫—Ä–∏—Ç–∏ –≤ –±—Ä–∞—É–∑–µ—Ä—ñ)")
    print("4. üìà –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    print("5. üîç –í–∞–ª—ñ–¥–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö")
    print("6. üìÑ –°—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π YAML —à–∞–±–ª–æ–Ω")
    print("7. üìÇ –ó–º—ñ–Ω–∏—Ç–∏ —Ä–æ–±–æ—á–∏–π —Ñ–∞–π–ª")
    print("8. üìã CSV ‚Üí YAML –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä")
    print("0. ‚ùå –í–∏—Ö—ñ–¥")
    print("=" * 60)



def process_menu_choice(choice, yaml_file):
    """–û–±—Ä–æ–±–∫–∞ –≤–∏–±–æ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ –º–µ–Ω—é"""
    if choice == "1":
        handle_interactive_filling(yaml_file)
    elif choice == "2":
        handle_excel_generation(yaml_file)
    elif choice == "3":
        handle_html_report(yaml_file)
    elif choice == "4":
        handle_statistics_display(yaml_file)
    elif choice == "5":
        handle_data_validation(yaml_file)
    elif choice == "6":
        handle_template_creation(yaml_file)
    elif choice == "7":
        new_file = handle_file_change()
        if new_file:
            return new_file
    elif choice == "8":
        handle_csv_submenu()
    elif choice == "0":
        print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
        return "exit"
    else:
        print("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –û–±–µ—Ä—ñ—Ç—å –≤—ñ–¥ 0 –¥–æ 8")
    
    return yaml_file


def run_interactive_menu(yaml_file):
    """–ó–∞–ø—É—Å–∫ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    while True:
        print_main_menu(yaml_file)
        choice = input("–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é (0-8): ").strip()
        
        try:
            result = process_menu_choice(choice, yaml_file)
            
            if result == "exit":
                break
            elif result and result != yaml_file:
                yaml_file = result
                
        except KeyboardInterrupt:
            print("\nüëã –ü—Ä–æ–≥—Ä–∞–º—É –ø–µ—Ä–µ—Ä–≤–∞–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º")
            break
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")
        
        input("\n–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è...")





def print_help_message():
    """–í–∏–≤–µ–¥–µ–Ω–Ω—è –¥–æ–≤—ñ–¥–∫–æ–≤–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó"""
    print("""
üöÄ –ì–ï–ù–ï–†–ê–¢–û–† –ú–ê–¢–†–ò–¶–¨ –ö–û–ú–ü–ï–¢–ï–ù–¶–Ü–ô

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
  python matrix2.py                          # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é (curriculum.yaml)
  python matrix2.py bachelor.yaml           # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é (bachelor.yaml)
  python matrix2.py bachelor.yaml --excel   # –¢—ñ–ª—å–∫–∏ Excel
  python matrix2.py bachelor.yaml --html    # –¢—ñ–ª—å–∫–∏ HTML
  python matrix2.py bachelor.yaml --stats   # –¢—ñ–ª—å–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  python matrix2.py --csv mappings.csv      # –ö–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ CSV –≤ YAML

–ü—Ä–∏–∫–ª–∞–¥–∏:
  python matrix2.py bachelor.yaml -x
  python matrix2.py master.yaml -t  
  python matrix2.py curriculum.yaml -s
  python matrix2.py -c data/mappings.csv
    """)


def main_menu():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –ø—Ä–æ–≥—Ä–∞–º–∏"""
    # –û–±—Ä–æ–±–∫–∞ --help
    if len(sys.argv) > 1 and sys.argv[1] in ["--help", "-h", "help"]:
        print_help_message()
        sys.exit(0)
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤
    args = parse_command_line_args()
    yaml_file = Path("data") / args.yaml_file
    base_dir = Path(__file__).parent.resolve()
    
    # –®–≤–∏–¥–∫—ñ –∫–æ–º–∞–Ω–¥–∏
    if handle_quick_commands(args, yaml_file, base_dir):
        return
    
    # –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é
    run_interactive_menu(yaml_file)


if __name__ == "__main__":
    main_menu()